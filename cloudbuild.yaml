# options:
#   logging: CLOUD_LOGGING_ONLY.

# substitutions:
#   _ENVIRONMENT: "dev"

# steps:
# # Debug step to print env vars (opt
# - id: 'Print Environment Variables'
#   name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
#   entrypoint: 'bash'
#   args:
#     - -c
#     - |
#       echo "--- Environment Variables ---"
#       env
#       echo "--- HOME = $$HOME ---"

# # Fetch the service account key from Secret Manager into $$HOME
# - id: 'Fetch Service Account Key'
#   name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
#   entrypoint: 'bash'
#   args:
#     - -c
#     - |
#       echo "Saving service account key to $$HOME/service-account-key.json"
#       gcloud secrets versions access latest --secret=service-account-key-${_ENVIRONMENT} > "$$HOME/service-account-key.json"

# # Terraform Init step
# - id: 'Init OpenTofu'
#   name: 'hashicorp/terraform:latest'
#   dir: 'tofu'
#   entrypoint: 'sh'
#   args:
#     - -c
#     - |
#       echo "Running terraform init..."
#       terraform init -backend-config="cloudbuild-state-bucket" \
#                      -backend-config="prefix=terraform/state/${_ENVIRONMENT}"

# # Terraform Apply step
# - id: 'Apply OpenTofu'
#   name: 'hashicorp/terraform:latest'
#   dir: 'tofu'
#   entrypoint: 'sh'
#   args:
#     - -c
#     - |
#       echo "Running terraform apply..."
#       terraform apply -var-file=../environments/${_ENVIRONMENT}/dev.tfvars \
#                       -var="credentials=$$HOME/service-account-key.json" \
#                       -auto-approve


options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _ENV: "dev"  # Default, gets overridden in UI when you manually run the trigger

steps:
  - name: 'hashicorp/terraform:light'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Deploying to environment: $_ENV"

        case "$_ENV" in
          dev)
            export TF_VAR_project_id="my-dev-project"
            export TF_VAR_region="us-central1"
            export TF_VAR_bucket_name="dev-bucket"
            ;;
          stage)
            export TF_VAR_project_id="my-stage-project"
            export TF_VAR_region="us-east1"
            export TF_VAR_bucket_name="stage-bucket"
            ;;
          prod)
            export TF_VAR_project_id="my-prod-project"
            export TF_VAR_region="europe-west1"
            export TF_VAR_bucket_name="prod-bucket"
            ;;
          *)
            echo "Invalid environment: $_ENV"
            exit 1
            ;;
        esac

        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan

timeout: 1200s


